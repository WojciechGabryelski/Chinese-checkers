memberSearchIndex = [{"p":"client","c":"CircleTree","l":"add(CircleTree)","u":"add(client.CircleTree)"},{"p":"server","c":"Game","l":"allPlayers"},{"p":"client","c":"Circle","l":"biggerCircle"},{"p":"client","c":"CheckersClient","l":"button"},{"p":"client","c":"CirclesManager","l":"button"},{"p":"client","c":"CircleTree","l":"changeChildrenColor()"},{"p":"client","c":"Circle","l":"changeStatus()"},{"p":"client","c":"CheckCirclesAlgorithm","l":"checkCircleIfWhite(CircleTree, int, int, boolean)","u":"checkCircleIfWhite(client.CircleTree,int,int,boolean)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"checkCircles(CircleTree, int, int, int)","u":"checkCircles(client.CircleTree,int,int,int)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"CheckCirclesAlgorithm()","u":"%3Cinit%3E()"},{"p":"client","c":"CheckCirclesRecursively","l":"checkCirclesRecursively"},{"p":"client","c":"CheckCirclesRecursively","l":"CheckCirclesRecursively()","u":"%3Cinit%3E()"},{"p":"client","c":"CirclesManager","l":"checkedCircleX"},{"p":"client","c":"CirclesManager","l":"checkedCircleY"},{"p":"client","c":"CheckersClient","l":"CheckersClient()","u":"%3Cinit%3E()"},{"p":"client","c":"CheckersClient","l":"CheckersClient(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"client","c":"CheckersClient.CheckersPanel","l":"CheckersPanel()","u":"%3Cinit%3E()"},{"p":"server","c":"CheckersServer","l":"CheckersServer()","u":"%3Cinit%3E()"},{"p":"client","c":"CheckFirstCircles","l":"checkFirstCircles"},{"p":"client","c":"CheckFirstCircles","l":"CheckFirstCircles()","u":"%3Cinit%3E()"},{"p":"client","c":"CircleTree","l":"children"},{"p":"client","c":"CircleTree","l":"circle"},{"p":"client","c":"Circle","l":"Circle(double, double, double)","u":"%3Cinit%3E(double,double,double)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"circles"},{"p":"client","c":"CirclesManager","l":"circles"},{"p":"client","c":"CheckersClient","l":"circlesManager"},{"p":"client","c":"CirclesManager","l":"CirclesManager(JPanel, JFrame, JLabel, JButton, PrintWriter)","u":"%3Cinit%3E(javax.swing.JPanel,javax.swing.JFrame,javax.swing.JLabel,javax.swing.JButton,java.io.PrintWriter)"},{"p":"client","c":"CirclesManager","l":"circleTree"},{"p":"client","c":"CircleTree","l":"CircleTree(Circle, CircleTree)","u":"%3Cinit%3E(client.Circle,client.CircleTree)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"color"},{"p":"client","c":"Circle","l":"color"},{"p":"client","c":"CirclesManager","l":"color"},{"p":"client","c":"Star","l":"color"},{"p":"client","c":"CirclesManager","l":"createCircles()"},{"p":"client","c":"CheckersClient","l":"createPanel()"},{"p":"client","c":"CheckersClient.CheckersPanel","l":"createStar()"},{"p":"server","c":"Game","l":"currentPlayer"},{"p":"tests","c":"DistancesEqualTest","l":"DistancesEqualTest()","u":"%3Cinit%3E()"},{"p":"client","c":"Circle","l":"draw(Graphics2D)","u":"draw(java.awt.Graphics2D)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"execute(CircleTree, int, int)","u":"execute(client.CircleTree,int,int)"},{"p":"client","c":"CheckCirclesRecursively","l":"execute(CircleTree, int, int)","u":"execute(client.CircleTree,int,int)"},{"p":"client","c":"CheckFirstCircles","l":"execute(CircleTree, int, int)","u":"execute(client.CircleTree,int,int)"},{"p":"client","c":"CircleTree","l":"findCircleTree(Circle)","u":"findCircleTree(client.Circle)"},{"p":"client","c":"CheckersClient","l":"frame"},{"p":"client","c":"CirclesManager","l":"frame"},{"p":"server","c":"Game","l":"Game()","u":"%3Cinit%3E()"},{"p":"client","c":"CirclesManager","l":"getCircles()"},{"p":"client","c":"CheckersClient","l":"getCirclesManager()"},{"p":"client","c":"CheckCirclesAlgorithm","l":"getColor()"},{"p":"client","c":"Circle","l":"getColor()"},{"p":"client","c":"Star","l":"getColor()"},{"p":"client","c":"CheckersClient","l":"getFrame()"},{"p":"client","c":"CheckCirclesRecursively","l":"getInstance()"},{"p":"client","c":"CheckFirstCircles","l":"getInstance()"},{"p":"client","c":"CirclesManager","l":"getN()"},{"p":"client","c":"CheckersClient","l":"in"},{"p":"server","c":"Game.Player","l":"input"},{"p":"client","c":"CirclesManager","l":"inTargetNumber"},{"p":"client","c":"CheckCirclesAlgorithm","l":"inTargetTriangle(int, int)","u":"inTargetTriangle(int,int)"},{"p":"client","c":"Circle","l":"isChecked"},{"p":"client","c":"CirclesManager","l":"isChecked"},{"p":"client","c":"Circle","l":"isHit(double, double)","u":"isHit(double,double)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"isOnTheBoard(int, int)","u":"isOnTheBoard(int,int)"},{"p":"client","c":"CheckersClient","l":"isPlaying"},{"p":"client","c":"CheckCirclesAlgorithm","l":"isWhite(CircleTree, int, int, boolean)","u":"isWhite(client.CircleTree,int,int,boolean)"},{"p":"client","c":"CheckCirclesRecursively","l":"isWhite(CircleTree, int, int, boolean)","u":"isWhite(client.CircleTree,int,int,boolean)"},{"p":"client","c":"CheckFirstCircles","l":"isWhite(CircleTree, int, int, boolean)","u":"isWhite(client.CircleTree,int,int,boolean)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"jumpsEnabled"},{"p":"client","c":"CheckersClient","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"server","c":"CheckersServer","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"client","c":"CheckersClient","l":"messageLabel"},{"p":"client","c":"CirclesManager","l":"messageLabel"},{"p":"client","c":"CirclesManager","l":"move(int, int, int, int)","u":"move(int,int,int,int)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"n"},{"p":"client","c":"CirclesManager","l":"n"},{"p":"client","c":"CirclesManager","l":"onPress(double, double)","u":"onPress(double,double)"},{"p":"tests","c":"OnPressTest","l":"OnPressTest()","u":"%3Cinit%3E()"},{"p":"client","c":"CheckersClient","l":"out"},{"p":"client","c":"CirclesManager","l":"out"},{"p":"server","c":"Game.Player","l":"output"},{"p":"client","c":"CheckersClient.CheckersPanel","l":"paintComponent(Graphics)","u":"paintComponent(java.awt.Graphics)"},{"p":"client","c":"CirclesManager","l":"panel"},{"p":"client","c":"CircleTree","l":"parent"},{"p":"client","c":"CheckersClient","l":"play()"},{"p":"server","c":"Game.Player","l":"Player(Socket)","u":"%3Cinit%3E(java.net.Socket)"},{"p":"server","c":"Game","l":"players"},{"p":"server","c":"Game.Player","l":"processCommands()"},{"p":"server","c":"Game.Player","l":"run()"},{"p":"client","c":"CheckCirclesAlgorithm","l":"setCircles(Map<Integer, Map<Integer, Circle>>)","u":"setCircles(java.util.Map)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"setColor(Color)","u":"setColor(java.awt.Color)"},{"p":"client","c":"Circle","l":"setColor(Color)","u":"setColor(java.awt.Color)"},{"p":"client","c":"CirclesManager","l":"setColors(int, int)","u":"setColors(int,int)"},{"p":"client","c":"CheckCirclesAlgorithm","l":"setN(int)"},{"p":"server","c":"Game.Player","l":"setup()"},{"p":"tests","c":"DistancesEqualTest","l":"shouldAnswerWithTrue()"},{"p":"client","c":"CircleTree","l":"showPath(JPanel)","u":"showPath(javax.swing.JPanel)"},{"p":"client","c":"CheckersClient","l":"socket"},{"p":"server","c":"Game.Player","l":"socket"},{"p":"client","c":"CheckersClient.CheckersPanel","l":"star"},{"p":"client","c":"Star","l":"Star(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"tests","c":"OnPressTest","l":"test()"}];updateSearchResults();